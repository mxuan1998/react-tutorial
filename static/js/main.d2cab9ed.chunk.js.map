{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","key","name","job","onClick","removeCharacter","Table","Form","handleChange","event","target","value","setState","submitForm","handleSubmit","state","initialState","this","onSubmit","onFormSubmit","htmlFor","type","id","onChange","React","Component","App","characters","filter","character","i","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAEMA,EAAc,WAChB,OACI,+BACI,4BACI,oCACA,sCAMVC,EAAW,SAACC,GACd,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GACvC,OACI,wBAAIC,IAAKD,GACL,4BAAKD,EAAIG,MACT,4BAAKH,EAAII,KACT,4BACI,4BAAQC,QAAS,kBAAMT,EAAMU,gBAAgBL,KAA7C,eAKhB,OAAO,+BAAQJ,IAiBJU,EAdD,SAACX,GAAW,IACdE,EAAmCF,EAAnCE,cAAeQ,EAAoBV,EAApBU,gBAEvB,OACF,+BACC,kBAAC,EAAD,MACS,kBAAC,EAAD,CACIR,cAAeA,EACfQ,gBAAiBA,M,OCgBlBE,E,kDAjDX,WAAYZ,GAAQ,IAAD,8BACf,cAAMA,IAUVa,aAAe,SAACC,GAAW,IAAD,EACEA,EAAMC,OAAtBR,EADc,EACdA,KAAMS,EADQ,EACRA,MAEd,EAAKC,SAAL,eACKV,EAAOS,KAfG,EAmBnBE,WAAa,WACT,EAAKlB,MAAMmB,aAAa,EAAKC,OAC7B,EAAKH,SAAS,EAAKI,eAlBnB,EAAKA,aAAe,CAChBd,KAAM,GACNC,IAAK,IAGT,EAAKY,MAAQ,EAAKC,aARH,E,qDAwBT,IAAD,EACiBC,KAAKF,MAAnBb,EADH,EACGA,KAAMC,EADT,EACSA,IAEd,OACI,0BAAMe,SAAUD,KAAKE,cACjB,2BAAOC,QAAQ,QAAf,QACA,2BACIC,KAAK,OACLnB,KAAK,OACLoB,GAAG,OACHX,MAAOT,EACPqB,SAAUN,KAAKT,eACnB,2BAAOY,QAAQ,OAAf,OACA,2BACIC,KAAK,OACLnB,KAAK,MACLoB,GAAG,MACHX,MAAOR,EACPoB,SAAUN,KAAKT,eACnB,4BAAQa,KAAK,UAAb,e,GA5CGG,IAAMC,WCoCVC,E,4MAjCbX,MAAQ,CACNY,WAAY,I,EAGdtB,gBAAkB,SAACL,GAAW,IACpB2B,EAAe,EAAKZ,MAApBY,WAER,EAAKf,SAAS,CACZe,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACxC,OAAOA,IAAM9B,Q,EAKnBc,aAAe,SAACe,GACd,EAAKjB,SAAS,CAAEe,WAAW,GAAD,mBAAM,EAAKZ,MAAMY,YAAjB,CAA4BE,O,uDAG9C,IACAF,EAAeV,KAAKF,MAApBY,WAER,OACE,yBAAKI,UAAU,aACb,kBAAC,EAAD,CACElC,cAAe8B,EACftB,gBAAiBY,KAAKZ,kBAExB,kBAAC,EAAD,CAAMS,aAAcG,KAAKH,oB,GA5BfU,IAAMC,W,MCCxBO,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.d2cab9ed.chunk.js","sourcesContent":["import React from 'react';\n\nconst TableHeader = () => {\n    return (\n        <thead>\n            <tr>\n                <th>Name</th>\n                <th>Job</th>\n            </tr>\n        </thead>\n    );\n}\n\nconst TableBody =(props) => {\n    const rows = props.characterData.map((row, index) => {\n        return (\n            <tr key={index}>\n                <td>{row.name}</td>\n                <td>{row.job}</td>\n                <td>\n                    <button onClick={() => props.removeCharacter(index)}>Delete</button>\n                </td>\n            </tr>\n        );\n    });\n    return <tbody>{rows}</tbody>\n}\n\nconst Table = (props) => {\n    const { characterData, removeCharacter } = props;\n\n    return (\n\t\t<table>\n\t\t\t<TableHeader />\n            <TableBody \n                characterData={characterData} \n                removeCharacter={removeCharacter} \n            />\n            </table>\n\t\t);\n}\n\nexport default Table;\n","import React from 'react';\n\nclass Form extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.initialState = {\n            name: '',\n            job: '',\n        };\n\n        this.state = this.initialState;\n    }\n    \n    handleChange = (event) => {\n        const { name, value } = event.target;\n\n        this.setState({\n            [name]: value,\n        });\n    }\n\n    submitForm = () => {\n        this.props.handleSubmit(this.state)\n        this.setState(this.initialState)\n    }\n\n    render() {\n        const { name, job } = this.state;\n\n        return (\n            <form onSubmit={this.onFormSubmit}>\n                <label htmlFor=\"name\">Name</label>\n                <input \n                    type=\"text\"\n                    name=\"name\"\n                    id=\"name\"\n                    value={name}\n                    onChange={this.handleChange} />\n                <label htmlFor=\"job\">Job</label>\n                <input \n                    type=\"text\"\n                    name=\"job\"\n                    id=\"job\"\n                    value={job}\n                    onChange={this.handleChange} />\n                <button type=\"submit\">Submit</button>\n            </form>\n        );\n    }\n}\n\nexport default Form;\n","import React from 'react';\nimport Table from './Table';\nimport Form from './Form';\n\nclass App extends React.Component {\n  state = {\n    characters: [],\n  };\n\n  removeCharacter = (index) => {\n    const { characters } = this.state;\n  \n    this.setState({\n      characters: characters.filter((character, i) => {\n        return i !== index\n      })\n    });\n  }\n\n  handleSubmit = (character) => {\n    this.setState({ characters: [...this.state.characters,character]})\n  }\n\n  render() {\n    const { characters } = this.state;\n\n    return (\n      <div className=\"container\">\n        <Table \n          characterData={characters} \n          removeCharacter={this.removeCharacter} \n        />\n        <Form handleSubmit={this.handleSubmit} />\n      </div>\n    );\n  }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}